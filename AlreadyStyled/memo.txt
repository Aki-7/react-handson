
State and Lifecycle
    inputをつくる
    bindについて
        javascriptのthisはobjectに束縛されるのではなく、
        その関数が実行されるときの環境によって変わる
        具体的にはfunctionが呼び出されるときの .の前がthis
        .で呼び出されない場合はundefined(strict mode) 
        non strict ではグローバルオブジェクト(windowとか)
    Lifecycle について
        componentWillMount
            DOMツリーに追加される前に一度だけ
            初期化処理
            setstate可能
        componentDidMount
            DOMツリーに追加された後に呼ばれる
            (後のupdata系と錯誤しないように)
            setstate可能
            badな例を一つ用意した。
        componentWillReceiveProps(nextProps)
            setstate可能　
            propsの情報もあらたなstateも、まとめてrenderされる。
        shouldComponentUpdate(nexpProps,nextState): bool
            false -> render method 
            setstateしてはいけない
        componentWillUpdate(nextProps,nextState)
            setstate不可能
        ~ ここでprops stateが変わる ~
        render
            state変更したりしない
        componentDidUpdate(prevProps,prevState)
            setstate可能だが、気をつけないと無限ループ

        componentWillUnmount
            setState可能
        
        setState((prevState:Props, prevState:State) => {

        })
        setStateは一部だけでも良い

        isMounted: bool

    部分レンダリング
        NameInput全体をrenderingしてるようにみえて実は部分レンダリング
        props or stateが全く変わらないとだめ。

Handling Events
